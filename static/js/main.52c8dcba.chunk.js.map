{"version":3,"sources":["App.js","index.js"],"names":["defaultText","App","useState","text","setText","marked","setOptions","breaks","test","id","className","class","onChange","e","value","target","ReactHtmlParser","ReactDOM","render","document","getElementById"],"mappings":"oOAmCA,IAAMA,EAAW,umCA8CFC,EA3Ef,WAAgB,IAAD,EACWC,mBAASF,GADpB,mBACNG,EADM,KACAC,EADA,KAQbC,IAAOC,WAAW,CAAEC,QAAQ,IAC5B,IAAIC,EAAOH,IAAOF,GAElB,OACE,sBAAKM,GAAG,UAAR,UACE,sBAAKA,GAAG,OAAR,UACE,sBAAKC,UAAU,SAAf,UACE,mBAAGC,MAAM,mBADX,YAGA,0BAAUC,SAdhB,SAAsBC,GAAI,IAChBC,EAAUD,EAAEE,OAAZD,MACRV,EAAQU,IAY8BA,MAAOX,EAAMM,GAAG,cAEpD,sBAAKA,GAAG,gBAAR,UACE,sBAAKC,UAAU,SAAf,UACE,mBAAGC,MAAM,wBADX,eAGA,qBAAKF,GAAG,UAAR,SAAmBO,YAAgBR,YCxB3CS,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.52c8dcba.chunk.js","sourcesContent":["import \"./App.css\";\nimport React, { useState } from \"react\";\n\nimport marked from \"marked\";\nimport ReactHtmlParser from \"html-react-parser\";\n\nfunction App() {\n  const [text, setText] = useState(defaultText);\n\n  function handleChange(e) {\n    const { value } = e.target;\n    setText(value);\n  }\n\n  marked.setOptions({ breaks: true });\n  let test = marked(text);\n\n  return (\n    <div id=\"wrapper\">\n      <div id=\"edit\">\n        <div className=\"topbar\">\n          <i class=\"ri-pencil-line\"></i>Editor\n        </div>\n        <textarea onChange={handleChange} value={text} id=\"editor\" />\n      </div>\n      <div id=\"preview-panel\">\n        <div className=\"topbar\">\n          <i class=\"ri-file-search-line\"></i>Previewer\n        </div>\n        <div id=\"preview\">{ReactHtmlParser(test)}</div>\n      </div>\n    </div>\n  );\n}\n\nconst defaultText = `\n# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbererd lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://goo.gl/Umyytc)\n`;\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}